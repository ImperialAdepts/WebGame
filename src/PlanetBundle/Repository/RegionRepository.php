<?php

namespace PlanetBundle\Repository;

use PlanetBundle\Entity\Peak;
use PlanetBundle\Entity\Region;

/**
 * RegionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RegionRepository extends \Doctrine\ORM\EntityRepository
{

    /**
     * @param Peak $peakInCenter
     * @return Region[]
     */
    public function findPeakSurrounding(Peak $peakInCenter) {
        return $this->getEntityManager()
            ->createQuery(
                "SELECT r FROM PlanetBundle:Region r WHERE "
                . "r.peakCenter=:peak OR "
                . "r.peakLeft=:peak OR "
                . "r.peakRight=:peak"
            )
            ->setParameter('peak', $peakInCenter)
            ->getResult();
    }

    /**
     * @param Region $region
     * @return Region[]
     */
	public function getRegionNeighbourhood(Region $region)
	{
	    return $this->findAll();
	    $c = $region->getPeakCenter()->getId();
	    $r = $region->getPeakRight()->getId();
	    $l = $region->getPeakLeft()->getId();
        return $this->getEntityManager()
//            ->createQuery(
//                "SELECT r FROM AppBundle:Planet\Region r WHERE "
//                . "(r.peakCenter=$c AND r.peakLeft=$l AND r.peakRight!=$r) OR "
//                . "(r.peakCenter=$c AND r.peakLeft!=$l AND r.peakRight=$r) OR "
//                . "(r.peakCenter!=$c AND r.peakLeft=$l AND r.peakRight=$r)"
//            )
            ->createQuery(
                "SELECT r FROM AppBundle:Region r, AppBundle:Planet\Region c WHERE "
                . "c.peakCenter=$c AND c.peakLeft=$l AND c.peakRight=$r AND ("
                . "(r.peakCenter=c.peakLeft AND r.peakRight=c.peakCenter) OR "
                . "(r.peakLeft=c.peakLeft AND r.peakRight=c.peakRight) OR "
                . "(r.peakCenter=c.peakRight AND r.peakLeft=c.peakCenter) "
                . ")"
            )
            ->getResult();
	}

	public function findByPeaks(Peak $peakC, Peak $peakL, Peak $peakR) {
	    $r = $this->findOneBy([
            'peakCenter' => $peakC,
            'peakLeft' => $peakL,
            'peakRight' => $peakR]);
	    if ($r) {
	        return $r;
        }
        $r = $this->findOneBy([
            'peakCenter' => $peakC,
            'peakLeft' => $peakR,
            'peakRight' => $peakL]);
        if ($r) {
            return $r;
        }
        $r = $this->findOneBy([
            'peakCenter' => $peakL,
            'peakLeft' => $peakC,
            'peakRight' => $peakR]);
        if ($r) {
            return $r;
        }
        $r = $this->findOneBy([
            'peakCenter' => $peakL,
            'peakLeft' => $peakR,
            'peakRight' => $peakC]);
        if ($r) {
            return $r;
        }
        $r = $this->findOneBy([
            'peakCenter' => $peakR,
            'peakLeft' => $peakC,
            'peakRight' => $peakL]);
        if ($r) {
            return $r;
        }
        return $this->findOneBy([
            'peakCenter' => $peakR,
            'peakLeft' => $peakL,
            'peakRight' => $peakC]);
    }

    public function getPeaksLeftOf(Peak $peak, $count = 1) {
        return $this->getEntityManager()
            ->createQuery(
                "SELECT p FROM PlanetBundle:Peak p WHERE "
                . "p.xcoord >= :xmin AND p.xcoord <= :xmax AND p.ycoord >= :ymin AND p.ycoord <= :ymax"
            )
            ->setParameter('xmin', $peak->getXcoord()-$count)
            ->setParameter('xmax', $peak->getXcoord()+$count)
            ->setParameter('ymin', $peak->getYcoord()-$count)
            ->setParameter('ymax', $peak->getYcoord())
            ->getResult();
    }

    public function getPeaksRightOf(Peak $peak, $count = 1) {
        return $this->getEntityManager()
            ->createQuery(
                "SELECT p FROM PlanetBundle:Peak p WHERE "
                . "p.xcoord >= :xmin AND p.xcoord <= :xmax AND p.ycoord >= :ymin AND p.ycoord <= :ymax"
            )
            ->setParameter('xmin', $peak->getXcoord()-$count)
            ->setParameter('xmax', $peak->getXcoord()+$count)
            ->setParameter('ymin', $peak->getYcoord())
            ->setParameter('ymax', $peak->getYcoord()+$count)
            ->getResult();
    }

}
