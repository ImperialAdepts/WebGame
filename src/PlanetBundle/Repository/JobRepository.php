<?php

namespace PlanetBundle\Repository;

use PlanetBundle\Entity\Job\AdministrationJob;
use PlanetBundle\Entity\Job\BuildJob;
use PlanetBundle\Entity\Job\BuyJob;
use PlanetBundle\Entity\Job\ProduceJob;
use PlanetBundle\Entity\Job\SellJob;
use PlanetBundle\Entity\Job\TransportJob;
use PlanetBundle\Entity\Region;
use PlanetBundle\Entity\Settlement;

/**
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class JobRepository extends \Doctrine\ORM\EntityRepository
{

    /**
     * @param Settlement $settlement
     * @param string $triggerType
     * @return AdministrationJob[]
     */
    public function getAdministrationBySettlement(Settlement $settlement, $triggerType = null)
    {
        $qb = $this->getEntityManager()->createQueryBuilder()
            ->select('job')
            ->from('PlanetBundle:Job\AdministrationJob', 'job')
            ->innerJoin('job.region', 'r')
            ->where('r.settlement=?1')
            ->setParameter(1, $settlement)
            ->orderBy('job.triggerType', 'DESC')
            ->orderBy('job.priority', 'DESC')
        ;
        if ($triggerType !== null) {
            $qb->andWhere('job.triggerType = :tt');
            $qb->setParameter('tt', $triggerType);
        }

        return $qb->getQuery()->getResult();
    }

    /**
     * @param Settlement $settlement
     * @param string $triggerType
     * @return BuildJob[]
     */
    public function getBuildBySettlement(Settlement $settlement, $triggerType = null)
    {
        $qb = $this->getEntityManager()->createQueryBuilder()
            ->select('job')
            ->from('PlanetBundle:Job\BuildJob', 'job')
            ->innerJoin('job.region', 'r')
            ->where('r.settlement=?1')
            ->setParameter(1, $settlement)
            ->orderBy('job.triggerType', 'DESC')
            ->orderBy('job.priority', 'DESC')
        ;
        if ($triggerType !== null) {
            $qb->andWhere('job.triggerType = :tt')
                ->setParameter('tt', $triggerType);
        }

        return $qb->getQuery()->getResult();
    }

    /**
     * @param Settlement $settlement
     * @param string $triggerType
     * @return TransportJob[]
     */
    public function getTransportBySettlement(Settlement $settlement, $triggerType = null)
    {
        $qb = $this->getEntityManager()->createQueryBuilder()
            ->select('job')
            ->from('PlanetBundle:Job\TransportJob', 'job')
            ->innerJoin('job.region', 'r')
            ->where('r.settlement=?1')
            ->setParameter(1, $settlement)
            ->orderBy('job.triggerType', 'DESC')
            ->orderBy('job.priority', 'DESC')
        ;
        if ($triggerType !== null) {
            $qb->andWhere('job.triggerType = :tt')
                ->setParameter('tt', $triggerType);
        }

        return $qb->getQuery()->getResult();
    }

    /**
     * @param Settlement $settlement
     * @param string $triggerType
     * @return ProduceJob[]
     */
    public function getProduceBySettlement(Settlement $settlement, $triggerType = null)
    {
        $qb = $this->getEntityManager()->createQueryBuilder()
            ->select('job')
            ->from('PlanetBundle:Job\ProduceJob', 'job')
            ->innerJoin('job.region', 'r')
            ->where('r.settlement=?1')
            ->setParameter(1, $settlement)
            ->orderBy('job.triggerType', 'DESC')
            ->orderBy('job.priority', 'DESC')
        ;
        if ($triggerType !== null) {
            $qb->andWhere('job.triggerType = :tt')
                ->setParameter('tt', $triggerType);
        }

        return $qb->getQuery()->getResult();
    }

    /**
     * @param Settlement $settlement
     * @param string $triggerType
     * @return BuyJob[]
     */
    public function getBuyBySettlement(Settlement $settlement, $triggerType = null)
    {
        $qb = $this->getEntityManager()->createQueryBuilder()
            ->select('job')
            ->from('PlanetBundle:Job\BuyJob', 'job')
            ->innerJoin('job.region', 'r')
            ->where('r.settlement=?1')
            ->setParameter(1, $settlement)
            ->orderBy('job.triggerType', 'DESC')
            ->orderBy('job.priority', 'DESC')
        ;
        if ($triggerType !== null) {
            $qb->andWhere('job.triggerType = :tt')
                ->setParameter('tt', $triggerType);
        }

        return $qb->getQuery()->getResult();
    }

    /**
     * @param Settlement $settlement
     * @param string $triggerType
     * @return SellJob[]
     */
    public function getSellBySettlement(Settlement $settlement, $triggerType = null)
    {
        $qb = $this->getEntityManager()->createQueryBuilder()
            ->select('job')
            ->from('PlanetBundle:Job\SellJob', 'job')
            ->innerJoin('job.region', 'r')
            ->where('r.settlement=?1')
            ->setParameter(1, $settlement)
            ->orderBy('job.triggerType', 'DESC')
            ->orderBy('job.priority', 'DESC')
        ;
        if ($triggerType !== null) {
            $qb->andWhere('job.triggerType = :tt')
                ->setParameter('tt', $triggerType);
        }

        return $qb->getQuery()->getResult();
    }

    /**
     * @param Region $region
     * @return BuildJob[]
     */
	public function getBuildByRegion(Region $region)
	{
		return $this->getEntityManager()
			->createQuery(
				"SELECT b FROM PlanetBundle:Planet\BuildJob b WHERE b.region=$region ORDER BY b.priority DESC"
			)
			->getResult();
	}

}
